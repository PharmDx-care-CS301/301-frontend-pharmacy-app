type Prescription @model @auth(rules: [{allow: public}]) @key(name: "byAssessment", fields: ["assessment_id"]) {
  id: ID!
  name: String
  assessment_id: ID
}

type Assessment @model @auth(rules: [{allow: public}]) @key(name: "byPatient", fields: ["patient_id"]) {
  id: ID!
  date: AWSDateTime
  description: String
  Prescription: [Prescription] @connection(keyName: "byAssessment", fields: ["id"])
  AssessedBy: Pharmacist @connection
  PerformedAt: Pharmacy @connection
  AssessedFor: Patient @connection
  FollowUp: FollowUp @connection
  patient_id: ID
  pharmacist_id: ID
}

type FollowUp @model @auth(rules: [{allow: public}]) {
  id: ID!
  contact_method: ContactMethod
  ForAssessment: Assessment @connection
  assessment_id: ID
}

type Pharmacist @model @auth(rules: [{allow: public}]) {
  id: ID!
  first_name: String
  last_name: String
  pharmacist_number: String
  pharmacys: [PharmacyPharmacist] @connection(keyName: "byPharmacist", fields: ["id"])
  pharmacy_ids: [ID]
}

type Pharmacy @model @auth(rules: [{allow: public}]) {
  id: ID!
  address: String
  name: String
  PharmacyPharmacists: [PharmacyPharmacist] @connection(keyName: "byPharmacy", fields: ["id"])
  pharmacist_ids: [ID]
}

enum FollowUpStatus {
  COMPLETED
  PENDINGRESPONSE
  TODO
  NOFOLLOWUPNEEDED
  RESPONSEOVERDUE
  FOLLOWUPREQUESTED
}

enum ContactMethod {
  SMS
  EMAIL
  PHARMACY
}

type Patient @model @auth(rules: [{allow: public}]) {
  id: ID!
  first_name: String!
  last_name: String!
  phone_number: AWSPhone
  email: AWSEmail
  postal_code: String
  dob: AWSDate!
  AssessmentRecord: [Assessment] @connection(keyName: "byPatient", fields: ["id"])
}

type PharmacyPharmacist @model(queries: null) @key(name: "byPharmacy", fields: ["pharmacyID", "pharmacistID"]) @key(name: "byPharmacist", fields: ["pharmacistID", "pharmacyID"]) @auth(rules: [{allow: public}, {allow: public}]) {
  id: ID!
  pharmacyID: ID!
  pharmacistID: ID!
  pharmacy: Pharmacy! @connection(fields: ["pharmacyID"])
  pharmacist: Pharmacist! @connection(fields: ["pharmacistID"])
}
 